on:
  pull_request:
    types: 
      - opened
      - reopened
      - synchronize # a commit on the head branch of the PR

env:
  SCRIPT_FOLDER: ${{ github.workspace }}/.github/scripts
  BUNDLE_TARGET: service_principal
  METADATA_FOLDER: _metadata
  BUNDLE_VALIDATION_FOLDER: validation_files
  NIGHTLY_FOLDER: nightly
  DEPENDENCIES_FOLDER: dependencies



jobs:
  comment:
    permissions:
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    outputs:
      environments: ${{steps.get-labels.outputs.labels}}
      table_bundles: ${{ steps.get_bundles.outputs.table_bundles }}
      view_bundles: ${{ steps.get_bundles.outputs.view_bundles }}
    steps:
      - name: Get labels and post comment
        id: get-labels
        uses: actions/github-script@v7
        with:
          script: |
            /* Grab labels on issue/pull request */
            const result = github.rest.issues.listLabelsOnIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            
            /* use "then" to grab response */
            result.then(function(result) {
              /* Run over each label in the data array of the result */
              let labels = Array.from(result['data'], (label) => label['name'])
              core.setOutput('labels', labels)
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Deploying to ${labels.join(' and ')}`
              })
            })
      - name: Pull repo to runner
        uses: actions/Checkout@v4
        with:
          fetch-depth: 0 #Fetch full history to allow for git diff before..after
          ref: ${{ github.event.pull_request.head.sha }}
  
      - run: |
          git config core.quotepath off # Allows for æ,ø,å in filepaths
          echo "${{github.event.action}}"

      - name: (re)opened git diff
        if: github.event.action == 'reopened' || github.event.action == 'opened'
        run: |
          git diff --name-status --merge-base main  > git_status.txt
          cat git_status.txt
      
      - name: commit git diff
        if: github.event.action == 'synchronize'
        run: |
          git diff --name-status ${{ github.event.before }}..${{ github.event.after }}  > git_status.txt
          cat git_status.txt

      # Note: first argument is name of input file, second is name of output file, third is the name of the environment folder
      - name: Identify added and modified bundles
        run: |
          python ${{ env.SCRIPT_FOLDER }}/bundles_from_git_status.py git_status.txt ./ "deployment" --ignore_case

      - name: Print bundles
        run: | 
          echo "Views:"
          cat view_bundles.json
          echo ""
          echo "Tables:"
          cat table_bundles.json

      # Lastly we write the list of changed bundles into the output of this step, with the name "changed_bundles".
      # Note, we must also specify an id to the step, to be able to use the output, just as before.
      - name: Write list of changed bundles to output
        id: get_bundles
        run: |
          echo "view_bundles=$(cat view_bundles.json)" >> "$GITHUB_OUTPUT"
          echo "table_bundles=$(cat table_bundles.json)" >> "$GITHUB_OUTPUT"